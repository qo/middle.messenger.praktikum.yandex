import { compile } from "pug";
import Component from "../../services/Component";
import ChatTemplate from "./Chat.template";
import Link from "../../components/Link/Link";
import Delimiter from "../../components/Delimiter/Delimiter";
import Text from "../../components/Text/Text";
import Button from "../../components/Button/Button";
import "./Chat.scss";
import ChatPreview from "./components/ChatPreview/ChatPreview";
import Input from "../../components/Input/Input";
import ChatMessage from "./components/ChatMessage/ChatMessage";
import Profile from "../Profile/Profile";
import replaceElementWithComponent from "../../utils/replaceElementWithComponent";

// @ts-ignore
import mouse from  "../../assets/images/mouse.png";
import ChatSocketAPI from "../../utils/api/chat-socket-api";

export default class Chat extends Component {

	constructor() {

		const profileLink = new Link({ action: () => replaceElementWithComponent("#root", new Profile()), text: "–ü—Ä–æ—Ñ–∏–ª—å ‚ûú" });
		const searchbar = new Input({ placeholder: "üîéÔ∏é –ü–æ–∏—Å–∫", type: "text" });
		const horizontalDelimiter = new Delimiter({ direction: "horizontal" });
		const horizontalDelimiter2 = new Delimiter({ direction: "horizontal" });
		const chatPreviewAndrey = new ChatPreview({ name: "–ê–Ω–¥—Ä–µ–π", lastMsg: "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", lastMsgDate: "10:49", msgAmt: "2" });
		const chatPreviewAlexandr = new ChatPreview({  name: "–ê–ª–µ–∫—Å–∞–Ω–¥—Ä", lastMsg: "–°–ø–∞—Å–∏–±–æ", lastMsgDate: "–ü—Ç", msgAmt: "0" });
		const verticalDelimiter = new Delimiter({ direction: "vertical" });
		const chosenChatName = new Text({ text: "–í–∞–¥–∏–º" });
		const chosenChatActions = new Button({ text: "‚ãÆ", action: () => {} });
		const messagesDate = new Text({ text: "19 –∏—é–Ω—è" });
		const attachButton = new Button({ text: "üìé", action: () => {} });
		const messageInput = new Input({ placeholder: "–°–æ–æ–±—â–µ–Ω–∏–µ", type: "text" });
		const sendButton = new Button({ text: "‚ûú", action: () => {} });
		const chatMessage1 = new ChatMessage({
			isMine: false,
			time: "11:56",
			type: "text",
			text: `–ü—Ä–∏–≤–µ—Ç! –°–º–æ—Ç—Ä–∏, —Ç—É—Ç –≤—Å–ø–ª—ã–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∫—É—Å–æ–∫ –ª—É–Ω–Ω–æ–π –∫–æ—Å–º–∏—á–µ—Å–∫–æ–π –∏—Å—Ç–æ—Ä–∏–∏ ‚Äî –ù–ê–°–ê –≤ –∫–∞–∫–æ–π-—Ç–æ –º–æ–º–µ–Ω—Ç –ø–æ–ø—Ä–æ—Å–∏–ª–∞ –•–∞—Å—Å–µ–ª—å–±–ª–∞–¥ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª—å SWC –¥–ª—è –ø–æ–ª–µ—Ç–æ–≤ –Ω–∞ –õ—É–Ω—É. –°–µ–π—á–∞—Å –º—ã –≤—Å–µ –∑–Ω–∞–µ–º —á—Ç–æ –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—ã –ª–µ—Ç–∞–ª–∏ —Å –º–æ–¥–µ–ª—å—é 500 EL ‚Äî –∏ –∫ —Å–ª–æ–≤—É –≥–æ–≤–æ—Ä—è, –≤—Å–µ —Ç—É—à–∫–∏ —ç—Ç–∏—Ö –∫–∞–º–µ—Ä –≤—Å–µ –µ—â–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –õ—É–Ω—ã, —Ç–∞–∫ –∫–∞–∫ –∞—Å—Ç—Ä–æ–Ω–∞–≤—Ç—ã —Å —Å–æ–±–æ–π –∑–∞–±—Ä–∞–ª–∏ —Ç–æ–ª—å–∫–æ –∫–∞—Å—Å–µ—Ç—ã —Å –ø–ª–µ–Ω–∫–æ–π.

            –•–∞—Å—Å–µ–ª—å–±–ª–∞–¥ –≤ –∏—Ç–æ–≥–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–ª SWC –¥–ª—è –∫–æ—Å–º–æ—Å–∞, –Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏ –Ω–∞ —Ä–∞–∫–µ—Ç—É –æ–Ω–∏ —Ç–∞–∫ –Ω–∏–∫–æ–≥–¥–∞ –∏ –Ω–µ –ø–æ–ø–∞–ª–∏. –í—Å–µ–≥–æ –∏—Ö –±—ã–ª–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–æ 25 —à—Ç—É–∫, –æ–¥–Ω—É –∏–∑ –Ω–∏—Ö –Ω–µ–¥–∞–≤–Ω–æ –ø—Ä–æ–¥–∞–ª–∏ –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ –∑–∞ 45000 –µ–≤—Ä–æ.`,
		});
		const chatMessage2 = new ChatMessage({
			isMine: false,
			time: "11:56",
			type: "image",
			image: mouse
		});
		const chatMessage3 = new ChatMessage({
			isMine: true,
			time: "12:00",
			type: "text",
			text: "–ö—Ä—É—Ç–æ!",
			status: "read"
		});

		super("div", {
			"children": {
				"profileLink": profileLink,
				"searchbar": searchbar,
				"horizontalDelimiter": horizontalDelimiter,
				"horizontalDelimiter2": horizontalDelimiter2,
				"chatPreviewAndrey": chatPreviewAndrey,
				"chatPreviewAlexandr": chatPreviewAlexandr,
				"verticalDelimiter": verticalDelimiter,
				"chosenChatName": chosenChatName,
				"chosenChatActions": chosenChatActions,
				"messagesDate": messagesDate,
				"attachButton": attachButton,
				"messageInput": messageInput,
				"sendButton": sendButton,
				"chatMessage1": chatMessage1,
				"chatMessage2": chatMessage2,
				"chatMessage3": chatMessage3
			}
		});

		const chatSocketAPI = new ChatSocketAPI();
		chatSocketAPI.connect(4136);

	}

	render() {
		return compile(ChatTemplate)();
	}

}